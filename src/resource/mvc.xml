<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <context:component-scan base-package="com.web,com.dataValid,com.Json,com.interceptor"/>
<!--    将springMVC不能处理的交个tomcat，比如css，js请求-->
    <mvc:default-servlet-handler/>
<!--    支持MVC的高级功能，比如JSR303校验，映射动态-->
    <mvc:annotation-driven/>
<!--    配置视图解析器-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" id="internalResourceViewResolver">
<!--        匹配前缀，从哪去找-->
        <property name="prefix" value="/WEB-INF/pages/"/>
<!--        匹配后缀，什么文件-->
        <property name="suffix" value=".jsp"/>
    </bean>
<!--    这是自定义解析视图-->
    <bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
<!--        order，视图解析器的顺序，值越小，优先级越高-->
        <property name="order" value="99"/>
    </bean>
<!--    配置国际化错误信息的资源处理bean-->
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basename" value="i18n"/>
    </bean>
<!--配置文件上传需要的bean,设置自定义id会报错-->
    <bean class="org.springframework.web.multipart.commons.CommonsMultipartResolver" >
    </bean>
<!--    配置interceptor拦截器-->
    <mvc:interceptors>
<!--        这种方式会拦截所有的目标方法-->
        <ref bean="myInterceptor"/>

<!--        配置针对特定path的拦截器-->
        <mvc:interceptor>
            <mvc:mapping path="/save"/>
            <ref bean="myInterceptor"/>
        </mvc:interceptor>

<!--        第一个拦截器-->
        <mvc:interceptor>
<!--            //通配符拦截-->
            <mvc:mapping path="/h*"/>
<!--            对特定方法取消拦截-->
            <mvc:exclude-mapping path="/hello"/>
            <ref bean="myInterceptor"/>
        </mvc:interceptor>

<!--        第二个拦截器-->
        <mvc:interceptor>
            <!--            //通配符拦截-->
            <mvc:mapping path="/h*"/>
            <!--            对特定方法取消拦截-->
            <mvc:exclude-mapping path="/hello"/>
            <ref bean="myIinterceptor2"/>
        </mvc:interceptor>
    </mvc:interceptors>
<!--    配置统一的异常处理-->
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
<!--                针对特定的异常-->
<!--                跳转的页面，jsp-->
                <prop key="java.lang.NullPointerException">nullpoint</prop>
<!--                所有的异常-->
                <prop key="java.lang.Exception">exception</prop>
            </props>
        </property>
    </bean>
</beans>